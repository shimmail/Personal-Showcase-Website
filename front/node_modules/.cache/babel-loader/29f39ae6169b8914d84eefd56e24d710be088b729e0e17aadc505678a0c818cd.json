{"ast":null,"code":"import { EventBus } from '@/utils/event-bus';\nimport request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      visible: false,\n      title: 'Login',\n      imgCode: '',\n      ruleForm: {\n        username: '',\n        password: '',\n        verification: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: 'please enter a username'\n        }],\n        password: [{\n          required: true,\n          message: 'please enter a password'\n        }, {\n          min: 10,\n          message: 'at least 10 letters'\n        }],\n        verification: [{\n          required: true,\n          message: 'please enter the verification'\n        }]\n      }\n    };\n  },\n  methods: {\n    show() {\n      this.visible = true;\n      this.getVerification();\n      this.resetForm('ruleForm');\n    },\n    hide() {\n      this.visible = false;\n    },\n    goToRegisterDialog() {\n      this.hide();\n      EventBus.$emit('show-register-dialog');\n    },\n    goToForgotPasswordDialog() {\n      this.hide();\n      EventBus.$emit('show-forgot-password-dialog');\n    },\n    async created() {\n      this.getVerification();\n    },\n    async submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let form = {\n            username: this.ruleForm.username,\n            password: this.ruleForm.password,\n            verification: this.ruleForm.verification\n          };\n          request.post('/log/login', form).then(response => {\n            if (response.data.code === 1) {\n              // 请求成功\n              console.log('请求成功:', response.data.msg);\n              console.log('jwt:', response.data.data.jwt);\n              localStorage.setItem('jwt', response.data.data.jwt);\n              localStorage.setItem('username', this.ruleForm.username);\n              EventBus.$emit('is-logged-in');\n              this.hide();\n            } else if (response.data.code === 0) {\n              // 请求失败\n              console.error('请求失败:', response.data.msg);\n              alert(response.data.msg);\n            } else {\n              // 未知的响应码\n              console.error('未知的响应码:', response.data.code, response.data.msg);\n            }\n          }).catch(error => {\n            console.error(error);\n          });\n        } else {\n          console.log('不合法的表单');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    getVerification() {\n      request.post('/get_verification').then(response => {\n        console.log(response.data.data);\n        if (response.data.code === 1) {\n          // 请求成功\n          this.imgCode = response.data.data;\n          console.log('请求成功:', response.data.msg);\n        } else if (response.data.code === 0) {\n          // 请求失败\n          console.error('请求失败:', response.data.msg);\n          alert(response.data.msg);\n        } else {\n          // 未知的响应码\n          console.error('未知的响应码:', response.data.code, response.data.msg);\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["EventBus","request","data","visible","title","imgCode","ruleForm","username","password","verification","rules","required","message","min","methods","show","getVerification","resetForm","hide","goToRegisterDialog","$emit","goToForgotPasswordDialog","created","submitForm","formName","$refs","validate","valid","form","post","then","response","code","console","log","msg","jwt","localStorage","setItem","error","alert","catch","resetFields"],"sources":["src/components/LoginDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog :visible.sync=\"visible\" :title=\"title\" width=\"640px\">\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"105px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"username\" prop=\"username\">\r\n                <el-input v-model=\"ruleForm.username\" placeholder=\"please enter a username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"password\" prop=\"password\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"please enter a password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"vertification\" prop=\"vertification\">\r\n                <el-input v-model=\"ruleForm.vertification\" placeholder=\"please enter the vertification\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-row>\r\n                    <el-col span=\"12\">\r\n                        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Login</el-button>\r\n                    </el-col>\r\n                    <img \r\n                        v-bind:src=\"'data:image/png;base64,' + imgCode\"\r\n                        alt=\"vertification\">\r\n                </el-row>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-row>\r\n                    <el-col span=\"12\">\r\n                        <el-button type=\"text\" @click=\"goToRegisterDialog\">Register</el-button>\r\n                    </el-col>\r\n                    <el-button type=\"text\" @click=\"goToForgotPasswordDialog\">forgot password?</el-button>\r\n                </el-row>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from '@/utils/event-bus';\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      title: 'Login',\r\n      imgCode: '',\r\n      ruleForm: {\r\n        username: '',\r\n        password: '',\r\n        verification: '',\r\n      },\r\n      rules: {\r\n        username: [\r\n          {required: true, message: 'please enter a username'},\r\n        ],\r\n        password: [\r\n          {required: true, message: 'please enter a password'},\r\n          {min: 10, message: 'at least 10 letters'}\r\n        ],\r\n        verification: [\r\n          {required: true, message: 'please enter the verification'}\r\n        ],\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    show() {\r\n      this.visible = true;\r\n      this.getVerification();\r\n      this.resetForm('ruleForm');\r\n    },\r\n    hide() {\r\n      this.visible = false;\r\n    },\r\n    goToRegisterDialog() {\r\n      this.hide();\r\n      EventBus.$emit('show-register-dialog');\r\n    },\r\n    goToForgotPasswordDialog() {\r\n      this.hide();\r\n      EventBus.$emit('show-forgot-password-dialog');\r\n    },\r\n\r\n    async created() {\r\n      this.getVerification();\r\n    },\r\n    async submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          let form = {\r\n            username: this.ruleForm.username,\r\n            password: this.ruleForm.password,\r\n            verification: this.ruleForm.verification,\r\n          }\r\n          request.post('/log/login', form)\r\n              .then((response) => {\r\n                if (response.data.code === 1) {\r\n                  // 请求成功\r\n                  console.log('请求成功:', response.data.msg);\r\n                  console.log('jwt:', response.data.data.jwt);\r\n                  localStorage.setItem('jwt', response.data.data.jwt);\r\n                  localStorage.setItem('username', this.ruleForm.username);\r\n                  EventBus.$emit('is-logged-in');\r\n                  this.hide();\r\n                } else if (response.data.code === 0) {\r\n                  // 请求失败\r\n                  console.error('请求失败:', response.data.msg);\r\n                  alert(response.data.msg);\r\n                } else {\r\n                  // 未知的响应码\r\n                  console.error('未知的响应码:', response.data.code, response.data.msg);\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error(error);\r\n              })\r\n        } else {\r\n          console.log('不合法的表单');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    getVerification() {\r\n      request.post('/get_verification').then((response) => {\r\n        console.log(response.data.data);\r\n        if (response.data.code === 1) {\r\n          // 请求成功\r\n          this.imgCode = response.data.data;\r\n          console.log('请求成功:', response.data.msg);\r\n        } else if (response.data.code === 0) {\r\n          // 请求失败\r\n          console.error('请求失败:', response.data.msg);\r\n          alert(response.data.msg);\r\n        } else {\r\n          // 未知的响应码\r\n          console.error('未知的响应码:', response.data.code, response.data.msg);\r\n        }\r\n      }).catch((error) => {\r\n        console.error(error);\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-row {\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n    background: #99a9bf;\r\n}\r\n\r\n.bg-purple {\r\n    background: #d3dce6;\r\n}\r\n\r\n.bg-purple-light {\r\n    background: #e5e9f2;\r\n}\r\n\r\n.grid-content {\r\n    border-radius: 4px;\r\n    min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n    padding: 10px 0;\r\n    background-color: #f9fafc;\r\n}\r\n\r\n.center-text {\r\n    text-align: center;\r\n    font-size: 36px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}