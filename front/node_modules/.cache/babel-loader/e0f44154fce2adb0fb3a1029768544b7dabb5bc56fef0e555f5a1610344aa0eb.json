{"ast":null,"code":"import { EventBus } from '@/utils/event-bus';\nimport axios from 'axios';\nimport request from '@/utils/request';\nconst jwt = localStorage.getItem('jwt');\nvar showcaseID = localStorage.getItem('showcaseID');\naxios.defaults.headers.common['Authorization'] = `Bearer ${jwt}`;\nexport default {\n  data() {\n    return {\n      showcase: {\n        id: '111',\n        username: '111',\n        gender: '1',\n        introduction: '111'\n      },\n      Provinces: [{\n        value: 'fujian',\n        label: 'fujian'\n      }, {\n        value: 'shandong',\n        label: 'shandong'\n      }\n      // ... 其他省份  \n      ],\n      Cities: {\n        fujian: [{\n          value: 'fuzhou',\n          label: 'fuzhou'\n        }, {\n          value: 'xiamen',\n          label: 'xiamen'\n        }\n        // ... 其他城市  \n        ],\n        shandong: [{\n          value: 'qingdao',\n          label: 'qingdao'\n        }\n        // ... 其他城市  \n        ]\n        // ... 其他省份的城市  \n      },\n      options: [{\n        value: '1',\n        label: 'male'\n      }, {\n        value: '2',\n        label: 'female'\n      }],\n      ruleForm: {\n        name: '',\n        gender: '',\n        birthday: '',\n        province: '',\n        city: '',\n        email: '',\n        phone: ''\n      }\n    };\n  },\n  async created() {\n    console.log(showcaseID);\n    showcaseID = localStorage.getItem('showcaseID');\n    request.get('/user/find_user', {\n      params: {\n        id: showcaseID\n      }\n    }).then(response => {\n      if (response.data.code === 1) {\n        // 请求成功\n        this.showcase = response.data.data;\n        var avatar = document.getElementById('avatar');\n        avatar.src = this.showcase.avator;\n        var video = document.getElementById('video');\n        video.src = this.showcase.video;\n        console.log(response.data);\n        console.log('请求成功:', response.data.msg);\n      } else if (response.data.code === 0) {\n        // 请求失败\n        console.error('请求失败:', response.data.msg);\n        alert(response.data.msg);\n      } else {\n        // 未知的响应码\n        console.error('未知的响应码:', response.data.code, response.data.msg);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  methods: {\n    showLoginDialog() {\n      EventBus.$emit('show-login-dialog');\n    }\n  }\n};","map":{"version":3,"names":["EventBus","axios","request","jwt","localStorage","getItem","showcaseID","defaults","headers","common","data","showcase","id","username","gender","introduction","Provinces","value","label","Cities","fujian","shandong","options","ruleForm","name","birthday","province","city","email","phone","created","console","log","get","params","then","response","code","avatar","document","getElementById","src","avator","video","msg","error","alert","catch","methods","showLoginDialog","$emit"],"sources":["src/views/project/PersonalView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-container>\r\n      <el-main>\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"80px\">\r\n          <el-row type=\"flex\">\r\n            <el-col :span=\"6\">\r\n              <img id=\"avatar\" src=\"#\" alt=\"Avatar\" style=\"width: 200px; height: 150px;\">\r\n              <br>\r\n              <br>\r\n              <br>\r\n              <br>\r\n              <div>\r\n                <span>ID:{{ showcase.id }}</span>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n              <el-form-item label=\"username\" prop=\"username\">\r\n                {{ showcase.username }}\r\n              </el-form-item>\r\n              <el-form-item label=\"gender\" prop=\"gender\">\r\n                <span v-if=\"showcase.gender === 1\">male</span>\r\n                <span v-else-if=\"showcase.gender === 2\">female</span>\r\n                <span v-else>unknown</span>\r\n              </el-form-item>\r\n              <el-form-item label=\"birthday\" prop=\"birthday\">\r\n                {{ showcase.birth_date }}\r\n              </el-form-item>\r\n              <el-form-item label=\"province\" prop=\"province\">\r\n                {{ showcase.province }}\r\n              </el-form-item>\r\n              <el-form-item label=\"city\" prop=\"city\">\r\n                {{ showcase.city }}\r\n              </el-form-item>\r\n              <el-form-item label=\"email\" prop=\"email\">\r\n                {{ showcase.email }}\r\n              </el-form-item>\r\n              <el-form-item label=\"phone\" prop=\"phone\">\r\n                {{ showcase.phone }}\r\n              </el-form-item>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <img src=\"  \" alt=\"photo\">\r\n              <br>\r\n              <br>\r\n              <video controls width=\"500\">\r\n                <source id=\"video\" src=\" \" type=\"video/mp4\">\r\n                您的浏览器不支持Video标签。\r\n              </video>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            self-introduction:\r\n            <p>{{ showcase.introduction }}</p>\r\n          </el-row>\r\n        </el-form>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { EventBus } from '@/utils/event-bus';\r\nimport axios from 'axios';\r\nimport request from '@/utils/request';\r\nconst jwt = localStorage.getItem('jwt');\r\nvar showcaseID = localStorage.getItem('showcaseID');\r\n\r\naxios.defaults.headers.common['Authorization'] = `Bearer ${jwt}`;\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      showcase: {\r\n        id: '111',\r\n        username:'111',\r\n        gender: '1',\r\n        introduction: '111',\r\n      },\r\n      Provinces: [\r\n        { value: 'fujian', label: 'fujian' },\r\n        { value: 'shandong', label: 'shandong' },\r\n        // ... 其他省份  \r\n      ],\r\n      Cities: {\r\n        fujian: [\r\n          { value: 'fuzhou', label: 'fuzhou' },\r\n          { value: 'xiamen', label: 'xiamen' },\r\n          // ... 其他城市  \r\n        ],\r\n        shandong: [\r\n          { value: 'qingdao', label: 'qingdao' },\r\n          // ... 其他城市  \r\n        ],\r\n        // ... 其他省份的城市  \r\n      },\r\n      options: [{\r\n        value: '1',\r\n        label: 'male'\r\n      }, {\r\n        value: '2',\r\n        label: 'female'\r\n      }],\r\n      ruleForm: {\r\n        name: '',\r\n        gender: '',\r\n        birthday: '',\r\n        province: '',\r\n        city: '',\r\n        email: '',\r\n        phone: '',\r\n      },\r\n    }\r\n  },\r\n  async created() {\r\n    console.log(showcaseID);\r\n    showcaseID = localStorage.getItem('showcaseID');\r\n\r\n    request.get('/user/find_user', {\r\n      params: {\r\n        id: showcaseID\r\n      }\r\n    })\r\n      .then((response) => {\r\n        if (response.data.code === 1) {\r\n          // 请求成功\r\n          this.showcase = response.data.data;\r\n          var avatar = document.getElementById('avatar');\r\n          avatar.src = this.showcase.avator;\r\n          var video = document.getElementById('video');\r\n          video.src = this.showcase.video;\r\n          console.log(response.data);\r\n          console.log('请求成功:', response.data.msg);\r\n        } else if (response.data.code === 0) {\r\n          // 请求失败\r\n          console.error('请求失败:', response.data.msg);\r\n          alert(response.data.msg);\r\n        } else {\r\n          // 未知的响应码\r\n          console.error('未知的响应码:', response.data.code, response.data.msg);\r\n        }\r\n      })\r\n      .catch ((error) => {\r\n        console.error(error);\r\n      })\r\n  },\r\n  methods: {\r\n    showLoginDialog() {\r\n      EventBus.$emit('show-login-dialog');\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.avatarView {\r\n  width: 300px;\r\n  height: 300px;\r\n  opacity: 1;\r\n  background: rgba(204, 204, 204, 1);\r\n}\r\n\r\n.el-row {\r\n  margin-bottom: 20px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.el-col {\r\n  border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n  background: #99a9bf;\r\n}\r\n\r\n.bg-purple {\r\n  background: #d3dce6;\r\n}\r\n\r\n.bg-purple-light {\r\n  background: #e5e9f2;\r\n}\r\n\r\n.grid-content {\r\n  border-radius: 4px;\r\n  min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n  padding: 10px 0;\r\n  background-color: #f9fafc;\r\n}\r\n\r\n.center-text {\r\n  text-align: center;\r\n  font-size: 36px;\r\n}\r\n\r\n.centered-button {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: block;\r\n}\r\n</style>\r\n"],"mappings":"AA+DA,SAAAA,QAAA;AACA,OAAAC,KAAA;AACA,OAAAC,OAAA;AACA,MAAAC,GAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAF,YAAA,CAAAC,OAAA;AAEAJ,KAAA,CAAAM,QAAA,CAAAC,OAAA,CAAAC,MAAA,8BAAAN,GAAA;AAEA;EACAO,KAAA;IACA;MACAC,QAAA;QACAC,EAAA;QACAC,QAAA;QACAC,MAAA;QACAC,YAAA;MACA;MACAC,SAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA;MACA;MAAA,CACA;MACAC,MAAA;QACAC,MAAA,GACA;UAAAH,KAAA;UAAAC,KAAA;QAAA,GACA;UAAAD,KAAA;UAAAC,KAAA;QAAA;QACA;QAAA,CACA;QACAG,QAAA,GACA;UAAAJ,KAAA;UAAAC,KAAA;QAAA;QACA;QAAA;QAEA;MACA;MACAI,OAAA;QACAL,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;MACAK,QAAA;QACAC,IAAA;QACAV,MAAA;QACAW,QAAA;QACAC,QAAA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;MACA;IACA;EACA;EACA,MAAAC,QAAA;IACAC,OAAA,CAAAC,GAAA,CAAA1B,UAAA;IACAA,UAAA,GAAAF,YAAA,CAAAC,OAAA;IAEAH,OAAA,CAAA+B,GAAA;MACAC,MAAA;QACAtB,EAAA,EAAAN;MACA;IACA,GACA6B,IAAA,CAAAC,QAAA;MACA,IAAAA,QAAA,CAAA1B,IAAA,CAAA2B,IAAA;QACA;QACA,KAAA1B,QAAA,GAAAyB,QAAA,CAAA1B,IAAA,CAAAA,IAAA;QACA,IAAA4B,MAAA,GAAAC,QAAA,CAAAC,cAAA;QACAF,MAAA,CAAAG,GAAA,QAAA9B,QAAA,CAAA+B,MAAA;QACA,IAAAC,KAAA,GAAAJ,QAAA,CAAAC,cAAA;QACAG,KAAA,CAAAF,GAAA,QAAA9B,QAAA,CAAAgC,KAAA;QACAZ,OAAA,CAAAC,GAAA,CAAAI,QAAA,CAAA1B,IAAA;QACAqB,OAAA,CAAAC,GAAA,UAAAI,QAAA,CAAA1B,IAAA,CAAAkC,GAAA;MACA,WAAAR,QAAA,CAAA1B,IAAA,CAAA2B,IAAA;QACA;QACAN,OAAA,CAAAc,KAAA,UAAAT,QAAA,CAAA1B,IAAA,CAAAkC,GAAA;QACAE,KAAA,CAAAV,QAAA,CAAA1B,IAAA,CAAAkC,GAAA;MACA;QACA;QACAb,OAAA,CAAAc,KAAA,YAAAT,QAAA,CAAA1B,IAAA,CAAA2B,IAAA,EAAAD,QAAA,CAAA1B,IAAA,CAAAkC,GAAA;MACA;IACA,GACAG,KAAA,CAAAF,KAAA;MACAd,OAAA,CAAAc,KAAA,CAAAA,KAAA;IACA;EACA;EACAG,OAAA;IACAC,gBAAA;MACAjD,QAAA,CAAAkD,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}