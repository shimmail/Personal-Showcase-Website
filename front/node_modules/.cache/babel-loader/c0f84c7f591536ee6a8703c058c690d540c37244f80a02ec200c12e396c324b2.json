{"ast":null,"code":"import axios from 'axios';\nimport { EventBus } from '@/utils/event-bus';\nexport default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('please enter the password again'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('please enter the password again'));\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error('the passwords are different!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      visible: false,\n      title: 'Change the password',\n      ruleForm: {\n        password: '',\n        checkPass: ''\n      },\n      rules: {\n        password: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          required: true,\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    show() {\n      this.visible = true;\n      this.resetForm();\n    },\n    hide() {\n      this.visible = false;\n    },\n    goToLoginDialog() {\n      this.hide();\n      EventBus.$emit('show-login-dialog');\n    },\n    async submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          axios.post('#', this.form);\n          this.goToLoginDialog();\n        } else {\n          console.log('failed!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","EventBus","data","validatePass","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","password","visible","title","rules","required","validator","trigger","methods","show","resetForm","hide","goToLoginDialog","$emit","submitForm","formName","validate","valid","post","form","console","log","resetFields"],"sources":["src/components/ChangePasswordDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog :visible.sync=\"visible\" :title=\"title\" width=\"640px\">\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"150px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"password\" prop=\"password\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"please enter a password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"check password\" prop=\"checkPass\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.checkPass\" placeholder=\"please enter the password again\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">OK</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { EventBus } from '@/utils/event-bus';\r\n\r\nexport default {\r\n\r\n    data() {\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('please enter the password again'));\r\n            } else {\r\n                if (this.ruleForm.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        var validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('please enter the password again'));\r\n            } else if (value !== this.ruleForm.password) {\r\n                callback(new Error('the passwords are different!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        }\r\n        return {\r\n            visible: false,\r\n            title: 'Change the password',\r\n            ruleForm: {\r\n                password: '',\r\n                checkPass: '',\r\n            },\r\n            rules: {\r\n                password: [\r\n                    { required: true, validator: validatePass, trigger: 'blur' }\r\n                ],\r\n                checkPass: [\r\n                    { required: true, validator: validatePass2, trigger: 'blur' }\r\n                ],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.visible = true;\r\n            this.resetForm();\r\n        },\r\n        hide() {\r\n            this.visible = false;\r\n        },\r\n        goToLoginDialog(){\r\n            this.hide();\r\n            EventBus.$emit('show-login-dialog');\r\n        },\r\n\r\n        async submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    axios.post('#', this.form);\r\n                    this.goToLoginDialog();\r\n                } else {\r\n                    console.log('failed!');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-row {\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n    background: #99a9bf;\r\n}\r\n\r\n.bg-purple {\r\n    background: #d3dce6;\r\n}\r\n\r\n.bg-purple-light {\r\n    background: #e5e9f2;\r\n}\r\n\r\n.grid-content {\r\n    border-radius: 4px;\r\n    min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n    padding: 10px 0;\r\n    background-color: #f9fafc;\r\n}\r\n"],"mappings":"AAiBA,OAAAA,KAAA;AACA,SAAAC,QAAA;AAEA;EAEAC,KAAA;IACA,IAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,aAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,QAAA,CAAAK,QAAA;QACAP,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAQ,OAAA;MACAC,KAAA;MACAP,QAAA;QACAK,QAAA;QACAJ,SAAA;MACA;MACAO,KAAA;QACAH,QAAA,GACA;UAAAI,QAAA;UAAAC,SAAA,EAAAf,YAAA;UAAAgB,OAAA;QAAA,EACA;QACAV,SAAA,GACA;UAAAQ,QAAA;UAAAC,SAAA,EAAAN,aAAA;UAAAO,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,KAAA;MACA,KAAAP,OAAA;MACA,KAAAQ,SAAA;IACA;IACAC,KAAA;MACA,KAAAT,OAAA;IACA;IACAU,gBAAA;MACA,KAAAD,IAAA;MACAtB,QAAA,CAAAwB,KAAA;IACA;IAEA,MAAAC,WAAAC,QAAA;MACA,KAAAjB,KAAA,CAAAiB,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA7B,KAAA,CAAA8B,IAAA,WAAAC,IAAA;UACA,KAAAP,eAAA;QACA;UACAQ,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAX,UAAAK,QAAA;MACA,KAAAjB,KAAA,CAAAiB,QAAA,EAAAO,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}