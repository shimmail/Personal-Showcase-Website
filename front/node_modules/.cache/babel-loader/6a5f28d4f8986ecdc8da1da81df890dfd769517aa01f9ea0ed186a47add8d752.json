{"ast":null,"code":"import request from \"@/utils/request\";\nimport { EventBus } from '@/utils/event-bus';\nexport default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('please enter a password'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('please enter the password again'));\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error('the passwords are different!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      visible: false,\n      title: 'Forgot password',\n      securityAskes: [{\n        value: '1',\n        label: 'your primary school'\n      }, {\n        value: '2',\n        label: 'your favorite movie'\n      }],\n      ruleForm: {\n        username: '',\n        securityAsk: '',\n        securityAns: '',\n        password: '',\n        checkPass: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: 'please enter a username',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 7,\n          message: '1-7 letters',\n          trigger: 'blur'\n        }],\n        securityAns: [{\n          required: true,\n          message: 'please enter the security ans',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'blur'\n        }, {\n          min: 10,\n          max: 20,\n          message: '10-20 letters',\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          required: true,\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    show() {\n      this.visible = true;\n      this.resetForm('ruleForm');\n    },\n    hide() {\n      this.visible = false;\n    },\n    goToChangePasswordDialog() {\n      this.hide();\n      EventBus.$emit('show-change-password-dialog');\n    },\n    async submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let form = {\n            username: this.ruleForm.username,\n            password: this.ruleForm.password,\n            securityAsk: this.ruleForm.securityAsk,\n            securityAns: this.ruleForm.securityAns\n          };\n          request.post('/log/forget_security', form).then(response => {\n            if (response.data.code === 1) {\n              // 请求成功\n              console.log('请求成功:', response.data.msg);\n              this.hide();\n            } else if (response.data.code === 0) {\n              // 请求失败\n              console.error('请求失败:', response.data.msg);\n              alert(response.data.msg);\n            } else {\n              // 未知的响应码\n              console.error('未知的响应码:', response.data.code, response.data.msg);\n            }\n          }).catch(error => {\n            console.error(error);\n          });\n        } else {\n          console.log('不合法的表单');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["request","EventBus","data","validatePass","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","password","visible","title","securityAskes","label","username","securityAsk","securityAns","rules","required","message","trigger","min","max","validator","methods","show","resetForm","hide","goToChangePasswordDialog","$emit","submitForm","formName","validate","valid","form","post","then","response","code","console","log","msg","error","alert","catch","resetFields"],"sources":["src/components/ForgotPasswordDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog :visible.sync=\"visible\" :title=\"title\" width=\"640px\">\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"150px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"username\" prop=\"username\">\r\n                <el-input v-model=\"ruleForm.username\" placeholder=\"please enter a username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"securityAsk\" prop=\"question\">\r\n              <el-select v-model=\"ruleForm.securityAsk\" placeholder=\"choose a security ask\">\r\n                <el-option v-for=\"item in securityAskes\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"securityAns\" prop=\"securityAns\">\r\n                <el-input v-model=\"ruleForm.securityAns\" placeholder=\"please enter the securityAns of securityAsk\"></el-input>\r\n            </el-form-item>\r\n          <el-form-item label=\"password\" prop=\"password\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"please enter a password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"check password\" prop=\"checkPass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.checkPass\"\r\n                      placeholder=\"please enter the password again\"></el-input>\r\n          </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">OK</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport { EventBus } from '@/utils/event-bus';\r\n\r\nexport default {\r\n    data() {\r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('please enter a password'));\r\n        } else {\r\n          if (this.ruleForm.checkPass !== '') {\r\n            this.$refs.ruleForm.validateField('checkPass');\r\n          }\r\n          callback();\r\n        }\r\n      };\r\n      var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('please enter the password again'));\r\n        } else if (value !== this.ruleForm.password) {\r\n          callback(new Error('the passwords are different!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      }\r\n        return {\r\n            visible: false,\r\n            title: 'Forgot password',\r\n          securityAskes: [{\r\n            value: '1',\r\n            label: 'your primary school'\r\n          }, {\r\n            value: '2',\r\n            label: 'your favorite movie'\r\n          }],\r\n            ruleForm: {\r\n                username: '',\r\n                securityAsk: '',\r\n                securityAns: '',\r\n              password: '',\r\n              checkPass: '',\r\n            },\r\n            rules: {\r\n                username: [\r\n                    { required: true, message: 'please enter a username', trigger: 'blur' },\r\n                    { min: 1, max: 7, message: '1-7 letters', trigger: 'blur' }\r\n                ],\r\n                securityAns: [\r\n                    { required: true, message: 'please enter the security ans', trigger: 'blur' },\r\n                ],\r\n              password: [\r\n                {required: true, validator: validatePass, trigger: 'blur'},\r\n                {min: 10, max: 20, message: '10-20 letters', trigger: 'blur'}\r\n              ],\r\n              checkPass: [\r\n                {required: true, validator: validatePass2, trigger: 'blur'}\r\n              ],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.visible = true;\r\n            this.resetForm('ruleForm');\r\n        },\r\n        hide() {\r\n            this.visible = false;\r\n        },\r\n        goToChangePasswordDialog(){\r\n            this.hide();\r\n            EventBus.$emit('show-change-password-dialog');\r\n        },\r\n\r\n        async submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                  let form = {\r\n                    username: this.ruleForm.username,\r\n                    password: this.ruleForm.password,\r\n                    securityAsk: this.ruleForm.securityAsk,\r\n                    securityAns: this.ruleForm.securityAns,\r\n                  }\r\n                  request.post('/log/forget_security', form)\r\n                      .then((response) => {\r\n                        if (response.data.code === 1) {\r\n                          // 请求成功\r\n                          console.log('请求成功:', response.data.msg);\r\n                          this.hide();\r\n                        } else if (response.data.code === 0) {\r\n                          // 请求失败\r\n                          console.error('请求失败:', response.data.msg);\r\n                          alert(response.data.msg);\r\n                        } else {\r\n                          // 未知的响应码\r\n                          console.error('未知的响应码:', response.data.code, response.data.msg);\r\n                        }\r\n                      })\r\n                      .catch((error) => {\r\n                        console.error(error);\r\n                      })\r\n                } else {\r\n                    console.log('不合法的表单');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-row {\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n    background: #99a9bf;\r\n}\r\n\r\n.bg-purple {\r\n    background: #d3dce6;\r\n}\r\n\r\n.bg-purple-light {\r\n    background: #e5e9f2;\r\n}\r\n\r\n.grid-content {\r\n    border-radius: 4px;\r\n    min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n    padding: 10px 0;\r\n    background-color: #f9fafc;\r\n}\r\n</style>"],"mappings":"AA8BA,OAAAA,OAAA;AACA,SAAAC,QAAA;AAEA;EACAC,KAAA;IACA,IAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,aAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,QAAA,CAAAK,QAAA;QACAP,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAQ,OAAA;MACAC,KAAA;MACAC,aAAA;QACAX,KAAA;QACAY,KAAA;MACA;QACAZ,KAAA;QACAY,KAAA;MACA;MACAT,QAAA;QACAU,QAAA;QACAC,WAAA;QACAC,WAAA;QACAP,QAAA;QACAJ,SAAA;MACA;MACAY,KAAA;QACAH,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,WAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAX,QAAA,GACA;UAAAS,QAAA;UAAAK,SAAA,EAAAxB,YAAA;UAAAqB,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAf,SAAA,GACA;UAAAa,QAAA;UAAAK,SAAA,EAAAf,aAAA;UAAAY,OAAA;QAAA;MAEA;IACA;EACA;EACAI,OAAA;IACAC,KAAA;MACA,KAAAf,OAAA;MACA,KAAAgB,SAAA;IACA;IACAC,KAAA;MACA,KAAAjB,OAAA;IACA;IACAkB,yBAAA;MACA,KAAAD,IAAA;MACA9B,QAAA,CAAAgC,KAAA;IACA;IAEA,MAAAC,WAAAC,QAAA;MACA,KAAAzB,KAAA,CAAAyB,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,IAAAC,IAAA;YACApB,QAAA,OAAAV,QAAA,CAAAU,QAAA;YACAL,QAAA,OAAAL,QAAA,CAAAK,QAAA;YACAM,WAAA,OAAAX,QAAA,CAAAW,WAAA;YACAC,WAAA,OAAAZ,QAAA,CAAAY;UACA;UACApB,OAAA,CAAAuC,IAAA,yBAAAD,IAAA,EACAE,IAAA,CAAAC,QAAA;YACA,IAAAA,QAAA,CAAAvC,IAAA,CAAAwC,IAAA;cACA;cACAC,OAAA,CAAAC,GAAA,UAAAH,QAAA,CAAAvC,IAAA,CAAA2C,GAAA;cACA,KAAAd,IAAA;YACA,WAAAU,QAAA,CAAAvC,IAAA,CAAAwC,IAAA;cACA;cACAC,OAAA,CAAAG,KAAA,UAAAL,QAAA,CAAAvC,IAAA,CAAA2C,GAAA;cACAE,KAAA,CAAAN,QAAA,CAAAvC,IAAA,CAAA2C,GAAA;YACA;cACA;cACAF,OAAA,CAAAG,KAAA,YAAAL,QAAA,CAAAvC,IAAA,CAAAwC,IAAA,EAAAD,QAAA,CAAAvC,IAAA,CAAA2C,GAAA;YACA;UACA,GACAG,KAAA,CAAAF,KAAA;YACAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;UACA;QACA;UACAH,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAd,UAAAK,QAAA;MACA,KAAAzB,KAAA,CAAAyB,QAAA,EAAAc,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}