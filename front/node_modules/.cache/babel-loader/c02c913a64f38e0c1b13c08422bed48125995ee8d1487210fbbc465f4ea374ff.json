{"ast":null,"code":"import request from '@/utils/request';\nimport { EventBus } from '@/utils/event-bus';\nexport default {\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('please enter a password'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('please enter the password again'));\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error('the passwords are different!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      visible: false,\n      title: 'Register',\n      securityAnses: [{\n        value: '1',\n        label: 'your father\\'s name'\n      }, {\n        value: '2',\n        label: 'your mother\\'s name'\n      }],\n      genders: [{\n        value: '1',\n        label: 'male'\n      }, {\n        value: '2',\n        label: 'female'\n      }],\n      ruleForm: {\n        username: '',\n        password: '',\n        checkPass: '',\n        age: '',\n        gender: '',\n        birthDate: '',\n        email: '',\n        emailCode: '',\n        securityAsk: '',\n        securityAns: '',\n        phone: '',\n        qq: '',\n        invite: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: 'please enter a username',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 7,\n          message: '1-7 letters',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          required: true,\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        age: [{\n          required: true\n        }],\n        gender: [{\n          required: true\n        }],\n        birthDate: [{\n          required: true\n        }],\n        email: [{\n          required: true\n        }],\n        emailCode: [{\n          required: true\n        }],\n        securityAsk: [{\n          required: true,\n          message: 'choose a security ask',\n          trigger: 'change'\n        }],\n        securityAns: [{\n          required: true,\n          message: 'please enter the security ans',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    show() {\n      this.visible = true;\n      this.resetForm('ruleForm');\n    },\n    hide() {\n      this.visible = false;\n    },\n    goToLoginDialog() {\n      this.hide();\n      EventBus.$emit('show-login-dialog');\n    },\n    async submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request.get('/log/register', {\n            params: {\n              username: this.ruleForm.username,\n              gender: this.ruleForm.gender,\n              ageStart: this.ruleForm.ageStart,\n              ageEnd: this.ruleForm.ageEnd,\n              email: this.ruleForm.email,\n              qq: this.ruleForm.qq,\n              phone: this.ruleForm.phone,\n              page: this.ruleForm.page,\n              pageSize: this.ruleForm.pageSize\n            }\n          }).then(response => {\n            this.findUser = response.data.data;\n            console.log(this.findUser);\n            if (response.data.code === 1) {\n              // 请求成功\n              this.findUser = response.data.data;\n              console.log('请求成功:', response.data.msg);\n            } else if (response.data.code === 0) {\n              // 请求失败\n              console.error('请求失败:', response.data.msg);\n              alert(response.data.msg);\n            } else {\n              // 未知的响应码\n              console.error('未知的响应码:', response.data.code, response.data.msg);\n            }\n          }).catch(error => {\n            console.error(error);\n          });\n        } else {\n          console.log('不合法的表单');\n          return false;\n        }\n      });\n    },\n    async submitEmail() {\n      request.get('/log/register', {\n        params: {\n          username: this.ruleForm.username,\n          gender: this.ruleForm.gender,\n          ageStart: this.ruleForm.ageStart,\n          ageEnd: this.ruleForm.ageEnd,\n          email: this.ruleForm.email,\n          qq: this.ruleForm.qq,\n          phone: this.ruleForm.phone,\n          page: this.ruleForm.page,\n          pageSize: this.ruleForm.pageSize\n        }\n      }).then(response => {\n        this.findUser = response.data.data;\n        console.log(this.findUser);\n        if (response.data.code === 1) {\n          // 请求成功\n          this.findUser = response.data.data;\n          console.log('请求成功:', response.data.msg);\n        } else if (response.data.code === 0) {\n          // 请求失败\n          console.error('请求失败:', response.data.msg);\n          alert(response.data.msg);\n        } else {\n          // 未知的响应码\n          console.error('未知的响应码:', response.data.code, response.data.msg);\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["request","EventBus","data","validatePass","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","password","visible","title","securityAnses","label","genders","username","age","gender","birthDate","email","emailCode","securityAsk","securityAns","phone","qq","invite","rules","required","message","trigger","min","max","validator","methods","show","resetForm","hide","goToLoginDialog","$emit","submitForm","formName","validate","valid","get","params","ageStart","ageEnd","page","pageSize","then","response","findUser","console","log","code","msg","error","alert","catch","submitEmail","resetFields"],"sources":["src/components/RegisterDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog :visible.sync=\"visible\" :title=\"title\" width=\"640px\">\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"150px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"username\" prop=\"username\">\r\n                <el-input v-model=\"ruleForm.username\" placeholder=\"please enter a username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"age\" prop=\"age\">\r\n                <el-input v-model=\"ruleForm.age\" placeholder=\"please enter your age\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"gender\" prop=\"gender\">\r\n                <el-select style=\"width: 150px;\" v-model=\"ruleForm.gender\" placeholder=\"gender\">\r\n                    <el-option style=\"width: 150px;\" v-for=\"item in genders\" :key=\"item.value\" :label=\"item.label\"\r\n                        :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"birthDate\" prop=\"birthDate\">\r\n                <el-date-picker style=\"width: 200px;\" v-model=\"ruleForm.birthDate\" type=\"date\"\r\n                    placeholder=\"birthDate\"></el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item label=\"password\" prop=\"password\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"please enter a password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"check password\" prop=\"checkPass\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.checkPass\"\r\n                    placeholder=\"please enter the password again\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"email\" prop=\"email\">\r\n              <el-input v-model=\"ruleForm.email\" placeholder=\"please enter a email\"></el-input>\r\n              <el-button type=\"primary\" @click=\"submitEmail()\">Send email vertification code</el-button>\r\n            </el-form-item>\r\n            <el-form-item label=\"emailCode\" prop=\"emailCode\">\r\n              <el-input v-model=\"ruleForm.emailCode\" placeholder=\"please enter the emailCode\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"security ask\" prop=\"securityAsk\">\r\n                <el-select v-model=\"ruleForm.securityAsk\" placeholder=\"choose a security ask\">\r\n                    <el-option v-for=\"item in securityAnses\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"security ans\" prop=\"securityAns\">\r\n                <el-input v-model=\"ruleForm.securityAns\"\r\n                    placeholder=\"please enter the securityAns of security ask\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"phone\" prop=\"phone\">\r\n                <el-input v-model=\"ruleForm.phone\" placeholder=\"please enter your phone\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"qq\" prop=\"qq\">\r\n                <el-input v-model=\"ruleForm.qq\" placeholder=\"please enter your qq\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"invite\" prop=\"invite\">\r\n                <el-input v-model=\"ruleForm.invite\" placeholder=\"please enter your invite\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Register</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport request from '@/utils/request';\r\nimport { EventBus } from '@/utils/event-bus';\r\n\r\nexport default {\r\n    data() {\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('please enter a password'));\r\n            } else {\r\n                if (this.ruleForm.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        var validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('please enter the password again'));\r\n            } else if (value !== this.ruleForm.password) {\r\n                callback(new Error('the passwords are different!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        }\r\n        return {\r\n            visible: false,\r\n            title: 'Register',\r\n            securityAnses: [{\r\n                value: '1',\r\n                label: 'your father\\'s name'\r\n            }, {\r\n                value: '2',\r\n                label: 'your mother\\'s name'\r\n            }],\r\n            genders: [{\r\n                value: '1',\r\n                label: 'male'\r\n            }, {\r\n                value: '2',\r\n                label: 'female'\r\n            }],\r\n            ruleForm: {\r\n                username: '',\r\n                password: '',\r\n                checkPass: '',\r\n                age: '',\r\n                gender: '',\r\n                birthDate: '',\r\n                email: '',\r\n                emailCode: '',\r\n                securityAsk: '',\r\n                securityAns: '',\r\n                phone: '',\r\n                qq: '',\r\n                invite: '',\r\n            },\r\n            rules: {\r\n                username: [\r\n                    { required: true, message: 'please enter a username', trigger: 'blur' },\r\n                    { min: 1, max: 7, message: '1-7 letters', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, validator: validatePass, trigger: 'blur' }\r\n                ],\r\n                checkPass: [\r\n                    { required: true, validator: validatePass2, trigger: 'blur' }\r\n                ],\r\n                age: [\r\n                    { required: true, },\r\n                ],\r\n                gender: [\r\n                    { required: true, },\r\n                ],\r\n                birthDate: [\r\n                    { required: true, },\r\n                ],\r\n                email: [\r\n                    { required: true, },\r\n                ],\r\n                emailCode: [\r\n                    { required: true, },\r\n                ],\r\n                securityAsk: [\r\n                    { required: true, message: 'choose a security ask', trigger: 'change' }\r\n                ],\r\n                securityAns: [\r\n                    { required: true, message: 'please enter the security ans', trigger: 'blur' },\r\n                ],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.visible = true;\r\n            this.resetForm('ruleForm');\r\n        },\r\n        hide() {\r\n            this.visible = false;\r\n        },\r\n        goToLoginDialog() {\r\n            this.hide();\r\n            EventBus.$emit('show-login-dialog');\r\n        },\r\n\r\n        async submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                  request.get('/log/register',{\r\n                    params: {\r\n                      username: this.ruleForm.username,\r\n                      gender: this.ruleForm.gender,\r\n                      ageStart: this.ruleForm.ageStart,\r\n                      ageEnd: this.ruleForm.ageEnd,\r\n                      email: this.ruleForm.email,\r\n                      qq: this.ruleForm.qq,\r\n                      phone: this.ruleForm.phone,\r\n                      page: this.ruleForm.page,\r\n                      pageSize: this.ruleForm.pageSize,\r\n                    }\r\n                  }).then((response) => {\r\n                    this.findUser = response.data.data;\r\n                    console.log(this.findUser);\r\n                    if (response.data.code === 1) {\r\n                      // 请求成功\r\n                      this.findUser = response.data.data;\r\n                      console.log('请求成功:', response.data.msg);\r\n                    } else if (response.data.code === 0) {\r\n                      // 请求失败\r\n                      console.error('请求失败:', response.data.msg);\r\n                      alert(response.data.msg);\r\n                    } else {\r\n                      // 未知的响应码\r\n                      console.error('未知的响应码:', response.data.code, response.data.msg);\r\n                    }\r\n                  })\r\n                      .catch ((error) => {\r\n                        console.error(error);\r\n                      })\r\n                } else {\r\n                    console.log('不合法的表单');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n      async submitEmail() {\r\n            request.get('/log/register',{\r\n              params: {\r\n                username: this.ruleForm.username,\r\n                gender: this.ruleForm.gender,\r\n                ageStart: this.ruleForm.ageStart,\r\n                ageEnd: this.ruleForm.ageEnd,\r\n                email: this.ruleForm.email,\r\n                qq: this.ruleForm.qq,\r\n                phone: this.ruleForm.phone,\r\n                page: this.ruleForm.page,\r\n                pageSize: this.ruleForm.pageSize,\r\n              }\r\n            }).then((response) => {\r\n              this.findUser = response.data.data;\r\n              console.log(this.findUser);\r\n              if (response.data.code === 1) {\r\n                // 请求成功\r\n                this.findUser = response.data.data;\r\n                console.log('请求成功:', response.data.msg);\r\n              } else if (response.data.code === 0) {\r\n                // 请求失败\r\n                console.error('请求失败:', response.data.msg);\r\n                alert(response.data.msg);\r\n              } else {\r\n                // 未知的响应码\r\n                console.error('未知的响应码:', response.data.code, response.data.msg);\r\n              }\r\n            })\r\n                .catch ((error) => {\r\n                  console.error(error);\r\n                })\r\n      },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-row {\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n    background: #99a9bf;\r\n}\r\n\r\n.bg-purple {\r\n    background: #d3dce6;\r\n}\r\n\r\n.bg-purple-light {\r\n    background: #e5e9f2;\r\n}\r\n\r\n.grid-content {\r\n    border-radius: 4px;\r\n    min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n    padding: 10px 0;\r\n    background-color: #f9fafc;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}