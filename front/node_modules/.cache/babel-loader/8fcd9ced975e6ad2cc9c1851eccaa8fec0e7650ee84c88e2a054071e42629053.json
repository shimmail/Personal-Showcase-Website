{"ast":null,"code":"import { EventBus } from '@/utils/event-bus';\nimport LoginDialog from './components/LoginDialog.vue';\nimport RegisterDialog from './components/RegisterDialog.vue';\nimport ForgotPasswordDialog from './components/ForgotPasswordDialog.vue';\nimport ChangePasswordDialog from './components/ChangePasswordDialog.vue';\nimport jwtDecode from 'jwt-decode';\nexport default {\n  components: {\n    LoginDialog,\n    RegisterDialog,\n    ForgotPasswordDialog,\n    ChangePasswordDialog\n  },\n  // ... ÂÖ∂‰ªñÈÄâÈ°π ...  \n  data() {\n    return {\n      isLoggedIn: false,\n      // ÂÅáËÆæËøôÊòØ‰ªéVuexÊàñÂÖ∂‰ªñÂú∞ÊñπËé∑ÂèñÁöÑÁôªÂΩïÁä∂ÊÄÅ  \n      avatarUrl: 'path/to/avatar.png',\n      // ÂÅáËÆæËøôÊòØÁî®Êà∑ÁöÑÂ§¥ÂÉèURL  \n      jwt: ''\n    };\n  },\n  created() {\n    EventBus.$on('show-login-dialog', this.showLoginDialog);\n    EventBus.$on('show-register-dialog', this.showRegisterDialog);\n    EventBus.$on('show-forgot-password-dialog', this.showForgotPasswordDialog);\n    EventBus.$on('show-change-password-dialog', this.showChangePasswordDialog);\n    EventBus.$on('is-logged-in', this.login);\n    EventBus.$on('is-logged-out', this.logout);\n    // ... ‰∏∫ÂÖ∂‰ªñÂºπÁ™óÊ∑ªÂä†‰∫ã‰ª∂ÁõëÂê¨ ...  \n  },\n  beforeDestroy() {\n    EventBus.$off('show-login-dialog', this.showLoginDialog);\n    EventBus.$off('show-register-dialog', this.showRegisterDialog);\n    EventBus.$off('show-forgot-password-dialog', this.showForgotPasswordDialog);\n    EventBus.$off('show-change-password-dialog', this.showChangePasswordDialog);\n    EventBus.$off('is-logged-in', this.login);\n    EventBus.$off('is-logged-out', this.logout);\n    // ... ÁßªÈô§ÂÖ∂‰ªñÂºπÁ™óÁöÑ‰∫ã‰ª∂ÁõëÂê¨ ...  \n  },\n  methods: {\n    showLoginDialog() {\n      this.$refs.loginDialog.show();\n    },\n    showRegisterDialog() {\n      this.$refs.registerDialog.show();\n    },\n    showForgotPasswordDialog() {\n      this.$refs.forgotPasswordDialog.show();\n    },\n    showChangePasswordDialog() {\n      this.$refs.changePasswordDialog.show();\n    },\n    login() {\n      this.isLoggedIn = true;\n      this.jwt = localStorage.getItem('jwt');\n      let decodedToken = jwtDecode(this.jwt);\n      const userID = decodedToken.id;\n      localStorage.setItem('userID', userID);\n    },\n    signOut() {\n      this.$confirm('Sign out?', 'Sign out', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'cancel',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: 'successfully signed out!'\n        });\n        this.logout;\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: 'cancelled signing out'\n        });\n      });\n    },\n    logout() {\n      this.$confirm('Logout?', 'Logout', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'cancel',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: 'successfully logged out!'\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: 'cancelled logging out'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["EventBus","LoginDialog","RegisterDialog","ForgotPasswordDialog","ChangePasswordDialog","jwtDecode","components","data","isLoggedIn","avatarUrl","jwt","created","$on","showLoginDialog","showRegisterDialog","showForgotPasswordDialog","showChangePasswordDialog","login","logout","beforeDestroy","$off","methods","$refs","loginDialog","show","registerDialog","forgotPasswordDialog","changePasswordDialog","localStorage","getItem","decodedToken","userID","id","setItem","signOut","$confirm","confirmButtonText","cancelButtonText","type","then","$message","message","catch"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header style=\"background: rgba(235, 235, 235, 1); height: 70px;\">\n        <el-row type=\"flex\" justify=\"center\">\n          <el-button round style=\"background: rgba(204, 204, 204, 1);\n            position: absolute;\n            top: 10px;\n            left: 10px;\n            height: 50px;\n            border-radius: 25px;\n            font-size: large;\" @click=\"$router.push({ name: 'home' })\">üêéHome</el-button>\n          <el-button round style=\"background: rgba(204, 204, 204, 1);\n            position: absolute;\n            top: 10px;\n            left: 160px;\n            height: 50px;\n            border-radius: 25px;\n            font-size: large;\" @click=\"$router.push({ name: 'blogHome' })\">blog</el-button>\n          <el-button round style=\"background: rgba(204, 204, 204, 1);\n            position: absolute;\n            top: 10px;\n            left: 310px;\n            height: 50px;\n            border-radius: 25px;\n            font-size: large;\" @click=\"$router.push({ name: 'about' })\">About us</el-button>\n          <div class=\"avatar-dropdown-container\">\n            <el-dropdown trigger=\"hover\" placement=\"bottom-start\">\n              <span class=\"el-dropdown-link\">\n                <img v-if=\"isLoggedIn\" src=\"#\" alt=\"Avatar\" class=\"avatar\">\n                <el-button v-else circle @click=\"showLoginDialog\" class=\"avatar\">Login</el-button>\n              </span>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item>\n                  <el-button type=\"text\" @click=\"$router.push({ name: 'edit' })\">My home</el-button>\n                </el-dropdown-item>\n                <el-dropdown-item>\n                  <el-button type=\"text\" @click=\"showChangePasswordDialog\">Change password</el-button>\n                </el-dropdown-item>\n                <el-dropdown-item>\n                  <el-button type=\"text\" @click=\"signOut\">Sign out</el-button>\n                </el-dropdown-item>\n                <el-dropdown-item>\n                  <el-button type=\"text\" @click=\"logout\">Logout</el-button>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n        </el-row>\n      </el-header>\n      <br>\n      <router-view></router-view>\n    </el-container>\n    <login-dialog ref=\"loginDialog\"></login-dialog>\n    <register-dialog ref=\"registerDialog\"></register-dialog>\n    <forgot-password-dialog ref=\"forgotPasswordDialog\"></forgot-password-dialog>\n    <change-password-dialog ref=\"changePasswordDialog\"></change-password-dialog>\n  </div>\n</template>\n\n<script>\n\nimport { EventBus } from '@/utils/event-bus';\n\nimport LoginDialog from './components/LoginDialog.vue';\nimport RegisterDialog from './components/RegisterDialog.vue';\nimport ForgotPasswordDialog from './components/ForgotPasswordDialog.vue';\nimport ChangePasswordDialog from './components/ChangePasswordDialog.vue';\n\nimport jwtDecode from 'jwt-decode'; \n\nexport default {\n  components: {\n    LoginDialog,\n    RegisterDialog,\n    ForgotPasswordDialog,\n    ChangePasswordDialog,\n  },\n  // ... ÂÖ∂‰ªñÈÄâÈ°π ...  \n  data() {\n    return {\n      isLoggedIn: false, // ÂÅáËÆæËøôÊòØ‰ªéVuexÊàñÂÖ∂‰ªñÂú∞ÊñπËé∑ÂèñÁöÑÁôªÂΩïÁä∂ÊÄÅ  \n      avatarUrl: 'path/to/avatar.png', // ÂÅáËÆæËøôÊòØÁî®Êà∑ÁöÑÂ§¥ÂÉèURL  \n      jwt: '',\n    };\n  },\n  created() {\n    EventBus.$on('show-login-dialog', this.showLoginDialog);\n    EventBus.$on('show-register-dialog', this.showRegisterDialog);\n    EventBus.$on('show-forgot-password-dialog', this.showForgotPasswordDialog);\n    EventBus.$on('show-change-password-dialog', this.showChangePasswordDialog);\n    EventBus.$on('is-logged-in', this.login);\n    EventBus.$on('is-logged-out', this.logout);\n    // ... ‰∏∫ÂÖ∂‰ªñÂºπÁ™óÊ∑ªÂä†‰∫ã‰ª∂ÁõëÂê¨ ...  \n  },\n  beforeDestroy() {\n    EventBus.$off('show-login-dialog', this.showLoginDialog);\n    EventBus.$off('show-register-dialog', this.showRegisterDialog);\n    EventBus.$off('show-forgot-password-dialog', this.showForgotPasswordDialog);\n    EventBus.$off('show-change-password-dialog', this.showChangePasswordDialog);\n    EventBus.$off('is-logged-in', this.login);\n    EventBus.$off('is-logged-out', this.logout);\n    // ... ÁßªÈô§ÂÖ∂‰ªñÂºπÁ™óÁöÑ‰∫ã‰ª∂ÁõëÂê¨ ...  \n  },\n  methods: {\n    showLoginDialog() {\n      this.$refs.loginDialog.show();\n    },\n    showRegisterDialog() {\n      this.$refs.registerDialog.show();\n    },\n    showForgotPasswordDialog() {\n      this.$refs.forgotPasswordDialog.show();\n    },\n    showChangePasswordDialog() {\n      this.$refs.changePasswordDialog.show();\n    },\n    login() {\n      this.isLoggedIn = true;\n      this.jwt = localStorage.getItem('jwt');\n      let decodedToken = jwtDecode(this.jwt);\n      const userID = decodedToken.id;\n      localStorage.setItem('userID', userID);\n    },\n    signOut() {\n      this.$confirm('Sign out?', 'Sign out', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'cancel',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: 'successfully signed out!',\n        });\n        this.logout;\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: 'cancelled signing out'\n        });\n      });\n    },\n    logout() {\n      this.$confirm('Logout?', 'Logout', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'cancel',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: 'successfully logged out!',\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: 'cancelled logging out'\n        });\n      });\n    },\n  }\n}\n</script>\n\n<style>\n.avatar-dropdown-container {\n  position: absolute;\n  top: 10px;\n  right: 15px;\n}\n\n.avatar {\n  width: 50px;\n  height: 50px;\n  opacity: 1;\n  background: rgba(204, 204, 204, 1);\n}\n\n.el-dropdown-link {\n  display: inline-block;\n}\n\n.el-dropdown-menu__item {\n  padding: 5px 20px;\n  /* Ê†πÊçÆÈúÄË¶ÅË∞ÉÊï¥‰∏ãÊãâËèúÂçïÈ°πÁöÑÊ†∑Âºè */\n}\n</style>\n"],"mappings":"AA8DA,SAAAA,QAAA;AAEA,OAAAC,WAAA;AACA,OAAAC,cAAA;AACA,OAAAC,oBAAA;AACA,OAAAC,oBAAA;AAEA,OAAAC,SAAA;AAEA;EACAC,UAAA;IACAL,WAAA;IACAC,cAAA;IACAC,oBAAA;IACAC;EACA;EACA;EACAG,KAAA;IACA;MACAC,UAAA;MAAA;MACAC,SAAA;MAAA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACAX,QAAA,CAAAY,GAAA,2BAAAC,eAAA;IACAb,QAAA,CAAAY,GAAA,8BAAAE,kBAAA;IACAd,QAAA,CAAAY,GAAA,qCAAAG,wBAAA;IACAf,QAAA,CAAAY,GAAA,qCAAAI,wBAAA;IACAhB,QAAA,CAAAY,GAAA,sBAAAK,KAAA;IACAjB,QAAA,CAAAY,GAAA,uBAAAM,MAAA;IACA;EACA;EACAC,cAAA;IACAnB,QAAA,CAAAoB,IAAA,2BAAAP,eAAA;IACAb,QAAA,CAAAoB,IAAA,8BAAAN,kBAAA;IACAd,QAAA,CAAAoB,IAAA,qCAAAL,wBAAA;IACAf,QAAA,CAAAoB,IAAA,qCAAAJ,wBAAA;IACAhB,QAAA,CAAAoB,IAAA,sBAAAH,KAAA;IACAjB,QAAA,CAAAoB,IAAA,uBAAAF,MAAA;IACA;EACA;EACAG,OAAA;IACAR,gBAAA;MACA,KAAAS,KAAA,CAAAC,WAAA,CAAAC,IAAA;IACA;IACAV,mBAAA;MACA,KAAAQ,KAAA,CAAAG,cAAA,CAAAD,IAAA;IACA;IACAT,yBAAA;MACA,KAAAO,KAAA,CAAAI,oBAAA,CAAAF,IAAA;IACA;IACAR,yBAAA;MACA,KAAAM,KAAA,CAAAK,oBAAA,CAAAH,IAAA;IACA;IACAP,MAAA;MACA,KAAAT,UAAA;MACA,KAAAE,GAAA,GAAAkB,YAAA,CAAAC,OAAA;MACA,IAAAC,YAAA,GAAAzB,SAAA,MAAAK,GAAA;MACA,MAAAqB,MAAA,GAAAD,YAAA,CAAAE,EAAA;MACAJ,YAAA,CAAAK,OAAA,WAAAF,MAAA;IACA;IACAG,QAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACA,KAAAC,QAAA;UACAF,IAAA;UACAG,OAAA;QACA;QACA,KAAAvB,MAAA;MACA,GAAAwB,KAAA;QACA,KAAAF,QAAA;UACAF,IAAA;UACAG,OAAA;QACA;MACA;IACA;IACAvB,OAAA;MACA,KAAAiB,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACA,KAAAC,QAAA;UACAF,IAAA;UACAG,OAAA;QACA;MACA,GAAAC,KAAA;QACA,KAAAF,QAAA;UACAF,IAAA;UACAG,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}