{"ast":null,"code":"import { EventBus } from '@/utils/event-bus';\nimport request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      visible: false,\n      title: 'Forgot password',\n      ruleForm: {\n        username: '',\n        securityAsk: '',\n        securityAns: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: 'please enter a username',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 7,\n          message: '1-7 letters',\n          trigger: 'blur'\n        }],\n        securityAns: [{\n          required: true,\n          message: 'please enter the security ans',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    show() {\n      this.visible = true;\n      this.resetForm('ruleForm');\n    },\n    hide() {\n      this.visible = false;\n    },\n    goToChangePasswordDialog() {\n      this.hide();\n      EventBus.$emit('show-change-password-dialog');\n    },\n    async submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request.post('/log/forget_security', this.form).then(response => {\n            const {\n              code,\n              msg,\n              data\n            } = response.data;\n            if (code === 1) {\n              // 请求成功  \n              console.log('请求成功:', msg);\n              console.log('数据:', data);\n              alert(msg);\n              this.goToChangePasswordDialog();\n            } else if (code === 0) {\n              // 请求失败  \n              console.error('请求失败:', msg);\n              alert(msg);\n            } else {\n              // 未知的响应码  \n              console.error('未知的响应码:', code, msg);\n            }\n          }).catch(error => {\n            // 处理网络错误或请求未发送成功的情况  \n            if (error.response) {\n              // 请求已发出，但服务器响应的状态码不在 2xx 范围内  \n              console.error('服务器响应错误:', error.response.data);\n              console.error('状态码:', error.response.status);\n            } else if (error.request) {\n              // 请求已发出，但没有收到响应  \n              console.error('请求错误:', error.request);\n            } else {\n              // 发生了其他错误（例如，在设置请求时出错）  \n              console.error('发生错误:', error.msg);\n            }\n          });\n        } else {\n          console.log('不合法的表单');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["EventBus","request","data","visible","title","ruleForm","username","securityAsk","securityAns","rules","required","message","trigger","min","max","methods","show","resetForm","hide","goToChangePasswordDialog","$emit","submitForm","formName","$refs","validate","valid","post","form","then","response","code","msg","console","log","alert","error","catch","status","resetFields"],"sources":["src/components/ForgotPasswordDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog :visible.sync=\"visible\" :title=\"title\" width=\"640px\">\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"150px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"username\" prop=\"username\">\r\n                <el-input v-model=\"ruleForm.username\" placeholder=\"please enter a username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"securityAsk\" prop=\"question\">\r\n                <el-select v-model=\"ruleForm.question\" placeholder=\"choose a securityAsk\">\r\n                    <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"securityAns\" prop=\"securityAns\">\r\n                <el-input v-model=\"ruleForm.securityAns\" placeholder=\"please enter the securityAns of securityAsk\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">OK</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { EventBus } from '@/utils/event-bus';\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            visible: false,\r\n            title: 'Forgot password',\r\n            ruleForm: {\r\n                username: '',\r\n                securityAsk: '',\r\n                securityAns: '',\r\n            },\r\n            rules: {\r\n                username: [\r\n                    { required: true, message: 'please enter a username', trigger: 'blur' },\r\n                    { min: 1, max: 7, message: '1-7 letters', trigger: 'blur' }\r\n                ],\r\n                securityAns: [\r\n                    { required: true, message: 'please enter the security ans', trigger: 'blur' },\r\n                ],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.visible = true;\r\n            this.resetForm('ruleForm');\r\n        },\r\n        hide() {\r\n            this.visible = false;\r\n        },\r\n        goToChangePasswordDialog(){\r\n            this.hide();\r\n            EventBus.$emit('show-change-password-dialog');\r\n        },\r\n\r\n        async submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request.post('/log/forget_security', this.form)\r\n                        .then((response) => {\r\n                            const { code, msg, data } = response.data;\r\n                            if (code === 1) {\r\n                                // 请求成功  \r\n                                console.log('请求成功:', msg);\r\n                                console.log('数据:', data);  \r\n                                alert(msg);\r\n                                this.goToChangePasswordDialog();\r\n                            } else if (code === 0) {\r\n                                // 请求失败  \r\n                                console.error('请求失败:', msg);\r\n                                alert(msg);\r\n                            } else {\r\n                                // 未知的响应码  \r\n                                console.error('未知的响应码:', code, msg);\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            // 处理网络错误或请求未发送成功的情况  \r\n                            if (error.response) {\r\n                                // 请求已发出，但服务器响应的状态码不在 2xx 范围内  \r\n                                console.error('服务器响应错误:', error.response.data);\r\n                                console.error('状态码:', error.response.status);\r\n                            } else if (error.request) {\r\n                                // 请求已发出，但没有收到响应  \r\n                                console.error('请求错误:', error.request);\r\n                            } else {\r\n                                // 发生了其他错误（例如，在设置请求时出错）  \r\n                                console.error('发生错误:', error.msg);\r\n                            }\r\n                        });\r\n                } else {\r\n                    console.log('不合法的表单');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-row {\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n    background: #99a9bf;\r\n}\r\n\r\n.bg-purple {\r\n    background: #d3dce6;\r\n}\r\n\r\n.bg-purple-light {\r\n    background: #e5e9f2;\r\n}\r\n\r\n.grid-content {\r\n    border-radius: 4px;\r\n    min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n    padding: 10px 0;\r\n    background-color: #f9fafc;\r\n}\r\n"],"mappings":"AAwBA,SAAAA,QAAA;AACA,OAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MACAC,QAAA;QACAC,QAAA;QACAC,WAAA;QACAC,WAAA;MACA;MACAC,KAAA;QACAH,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,WAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,KAAA;MACA,KAAAb,OAAA;MACA,KAAAc,SAAA;IACA;IACAC,KAAA;MACA,KAAAf,OAAA;IACA;IACAgB,yBAAA;MACA,KAAAD,IAAA;MACAlB,QAAA,CAAAoB,KAAA;IACA;IAEA,MAAAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAxB,OAAA,CAAAyB,IAAA,8BAAAC,IAAA,EACAC,IAAA,CAAAC,QAAA;YACA;cAAAC,IAAA;cAAAC,GAAA;cAAA7B;YAAA,IAAA2B,QAAA,CAAA3B,IAAA;YACA,IAAA4B,IAAA;cACA;cACAE,OAAA,CAAAC,GAAA,UAAAF,GAAA;cACAC,OAAA,CAAAC,GAAA,QAAA/B,IAAA;cACAgC,KAAA,CAAAH,GAAA;cACA,KAAAZ,wBAAA;YACA,WAAAW,IAAA;cACA;cACAE,OAAA,CAAAG,KAAA,UAAAJ,GAAA;cACAG,KAAA,CAAAH,GAAA;YACA;cACA;cACAC,OAAA,CAAAG,KAAA,YAAAL,IAAA,EAAAC,GAAA;YACA;UACA,GACAK,KAAA,CAAAD,KAAA;YACA;YACA,IAAAA,KAAA,CAAAN,QAAA;cACA;cACAG,OAAA,CAAAG,KAAA,aAAAA,KAAA,CAAAN,QAAA,CAAA3B,IAAA;cACA8B,OAAA,CAAAG,KAAA,SAAAA,KAAA,CAAAN,QAAA,CAAAQ,MAAA;YACA,WAAAF,KAAA,CAAAlC,OAAA;cACA;cACA+B,OAAA,CAAAG,KAAA,UAAAA,KAAA,CAAAlC,OAAA;YACA;cACA;cACA+B,OAAA,CAAAG,KAAA,UAAAA,KAAA,CAAAJ,GAAA;YACA;UACA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAhB,UAAAK,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAgB,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}