{"ast":null,"code":"import axios from 'axios';\nimport { EventBus } from '@/utils/event-bus';\nimport jwtDecode from 'jwt-decode';\nimport request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      visible: false,\n      title: 'Login',\n      imgCode: '',\n      ruleForm: {\n        username: '',\n        password: '',\n        verification: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: 'please enter a username'\n        }],\n        password: [{\n          required: true,\n          message: 'please enter a password'\n        }, {\n          min: 10,\n          message: 'at least 10 letters'\n        }],\n        vertification: [{\n          required: true,\n          message: 'please enter the vertification'\n        }]\n      }\n    };\n  },\n  methods: {\n    show() {\n      this.visible = true;\n      this.resetForm('ruleForm');\n    },\n    hide() {\n      this.visible = false;\n    },\n    goToRegisterDialog() {\n      this.hide();\n      EventBus.$emit('show-register-dialog');\n    },\n    goToForgotPasswordDialog() {\n      this.hide();\n      EventBus.$emit('show-forgot-password-dialog');\n    },\n    async created() {\n      try {\n        const response = request.get('/get_verification');\n        if (response.code == 0) {\n          alert(response.msg);\n        } else this.imgCode = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request.post('/log/login', this.form).then(response => {\n            const {\n              code,\n              msg,\n              data: {\n                jwt\n              }\n            } = response.data;\n            let decodedToken = jwtDecode(this.jwt);\n            const username = decodedToken.username;\n            if (code === 1) {\n              // 请求成功  \n              console.log('请求成功:', msg);\n              console.log('jwt:', jwt);\n              localStorage.setItem('jwt', jwt);\n              localStorage.setItem('username', username);\n              alert(msg);\n              EventBus.$emit('is-logged-in');\n              this.hide();\n            } else if (code === 0) {\n              // 请求失败  \n              console.error('请求失败:', msg);\n              alert(msg);\n            } else {\n              // 未知的响应码  \n              console.error('未知的响应码:', code, msg);\n            }\n          }).catch(error => {\n            // 处理网络错误或请求未发送成功的情况  \n            if (error.response) {\n              // 请求已发出，但服务器响应的状态码不在 2xx 范围内  \n              console.error('服务器响应错误:', error.response.data);\n              console.error('状态码:', error.response.status);\n            } else if (error.request) {\n              // 请求已发出，但没有收到响应  \n              console.error('请求错误:', error.request);\n            } else {\n              // 发生了其他错误（例如，在设置请求时出错）  \n              console.error('发生错误:', error.msg);\n            }\n          });\n        } else {\n          console.log('不合法的表单');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","EventBus","jwtDecode","request","data","visible","title","imgCode","ruleForm","username","password","verification","rules","required","message","min","vertification","methods","show","resetForm","hide","goToRegisterDialog","$emit","goToForgotPasswordDialog","created","response","get","code","alert","msg","error","console","submitForm","formName","$refs","validate","valid","post","form","then","jwt","decodedToken","log","localStorage","setItem","catch","status","resetFields"],"sources":["src/components/LoginDialog.vue"],"sourcesContent":["<template>\r\n    <el-dialog :visible.sync=\"visible\" :title=\"title\" width=\"640px\">\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"105px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"username\" prop=\"username\">\r\n                <el-input v-model=\"ruleForm.username\" placeholder=\"please enter a username\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"password\" prop=\"password\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.password\" placeholder=\"please enter a password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"vertification\" prop=\"vertification\">\r\n                <el-input v-model=\"ruleForm.vertification\" placeholder=\"please enter the vertification\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-row>\r\n                    <el-col span=\"12\">\r\n                        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">Login</el-button>\r\n                    </el-col>\r\n                    <img \r\n                        src=\"'data:image/png;base64,' + imgCode\" \r\n                        alt=\"vertification\">\r\n                </el-row>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-row>\r\n                    <el-col span=\"12\">\r\n                        <el-button type=\"text\" @click=\"goToRegisterDialog\">Register</el-button>\r\n                    </el-col>\r\n                    <el-button type=\"text\" @click=\"goToForgotPasswordDialog\">forgot password?</el-button>\r\n                </el-row>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { EventBus } from '@/utils/event-bus';\r\nimport jwtDecode from 'jwt-decode';\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            visible: false,\r\n            title: 'Login',\r\n            imgCode: '',\r\n            ruleForm: {\r\n                username: '',\r\n                password: '',\r\n                verification: '',\r\n            },\r\n            rules: {\r\n                username: [\r\n                    { required: true, message: 'please enter a username' },\r\n                ],\r\n                password: [\r\n                    { required: true, message: 'please enter a password' },\r\n                    { min: 10, message: 'at least 10 letters' }\r\n                ],\r\n                vertification: [\r\n                    { required: true, message: 'please enter the vertification' }\r\n                ],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.visible = true;\r\n            this.resetForm('ruleForm');\r\n        },\r\n        hide() {\r\n            this.visible = false;\r\n        },\r\n        goToRegisterDialog() {\r\n            this.hide();\r\n            EventBus.$emit('show-register-dialog');\r\n        },\r\n        goToForgotPasswordDialog() {\r\n            this.hide();\r\n            EventBus.$emit('show-forgot-password-dialog');\r\n        },\r\n\r\n        async created() {\r\n            try {\r\n                const response =request.get('/get_verification');\r\n                if (response.code == 0) {\r\n                    alert(response.msg);\r\n                }\r\n                else this.imgCode = response.data;\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n        async submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    request.post('/log/login', this.form)\r\n                        .then((response) => {\r\n                            const { code, msg, data: { jwt } } = response.data;\r\n                            let decodedToken = jwtDecode(this.jwt);\r\n                            const username = decodedToken.username;\r\n                            if (code === 1) {\r\n                                // 请求成功  \r\n                                console.log('请求成功:', msg);\r\n                                console.log('jwt:', jwt);\r\n                                localStorage.setItem('jwt', jwt);\r\n                                localStorage.setItem('username', username);\r\n                                alert(msg);\r\n                                EventBus.$emit('is-logged-in');\r\n                                this.hide();\r\n                            } else if (code === 0) {\r\n                                // 请求失败  \r\n                                console.error('请求失败:', msg);\r\n                                alert(msg);\r\n                            } else {\r\n                                // 未知的响应码  \r\n                                console.error('未知的响应码:', code, msg);\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            // 处理网络错误或请求未发送成功的情况  \r\n                            if (error.response) {\r\n                                // 请求已发出，但服务器响应的状态码不在 2xx 范围内  \r\n                                console.error('服务器响应错误:', error.response.data);\r\n                                console.error('状态码:', error.response.status);\r\n                            } else if (error.request) {\r\n                                // 请求已发出，但没有收到响应  \r\n                                console.error('请求错误:', error.request);\r\n                            } else {\r\n                                // 发生了其他错误（例如，在设置请求时出错）  \r\n                                console.error('发生错误:', error.msg);\r\n                            }\r\n                        });\r\n                } else {\r\n                    console.log('不合法的表单');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-row {\r\n    margin-bottom: 20px;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n}\r\n\r\n.el-col {\r\n    border-radius: 4px;\r\n}\r\n\r\n.bg-purple-dark {\r\n    background: #99a9bf;\r\n}\r\n\r\n.bg-purple {\r\n    background: #d3dce6;\r\n}\r\n\r\n.bg-purple-light {\r\n    background: #e5e9f2;\r\n}\r\n\r\n.grid-content {\r\n    border-radius: 4px;\r\n    min-height: 36px;\r\n}\r\n\r\n.row-bg {\r\n    padding: 10px 0;\r\n    background-color: #f9fafc;\r\n}\r\n\r\n.center-text {\r\n    text-align: center;\r\n    font-size: 36px;\r\n}\r\n</style>"],"mappings":"AAmCA,OAAAA,KAAA;AACA,SAAAC,QAAA;AACA,OAAAC,SAAA;AACA,OAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MACAC,OAAA;MACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QACAC,YAAA;MACA;MACAC,KAAA;QACAH,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAD,OAAA;QAAA,EACA;QACAE,aAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,KAAA;MACA,KAAAb,OAAA;MACA,KAAAc,SAAA;IACA;IACAC,KAAA;MACA,KAAAf,OAAA;IACA;IACAgB,mBAAA;MACA,KAAAD,IAAA;MACAnB,QAAA,CAAAqB,KAAA;IACA;IACAC,yBAAA;MACA,KAAAH,IAAA;MACAnB,QAAA,CAAAqB,KAAA;IACA;IAEA,MAAAE,QAAA;MACA;QACA,MAAAC,QAAA,GAAAtB,OAAA,CAAAuB,GAAA;QACA,IAAAD,QAAA,CAAAE,IAAA;UACAC,KAAA,CAAAH,QAAA,CAAAI,GAAA;QACA,OACA,KAAAtB,OAAA,GAAAkB,QAAA,CAAArB,IAAA;MACA,SAAA0B,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IACA,MAAAE,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAjC,OAAA,CAAAkC,IAAA,oBAAAC,IAAA,EACAC,IAAA,CAAAd,QAAA;YACA;cAAAE,IAAA;cAAAE,GAAA;cAAAzB,IAAA;gBAAAoC;cAAA;YAAA,IAAAf,QAAA,CAAArB,IAAA;YACA,IAAAqC,YAAA,GAAAvC,SAAA,MAAAsC,GAAA;YACA,MAAA/B,QAAA,GAAAgC,YAAA,CAAAhC,QAAA;YACA,IAAAkB,IAAA;cACA;cACAI,OAAA,CAAAW,GAAA,UAAAb,GAAA;cACAE,OAAA,CAAAW,GAAA,SAAAF,GAAA;cACAG,YAAA,CAAAC,OAAA,QAAAJ,GAAA;cACAG,YAAA,CAAAC,OAAA,aAAAnC,QAAA;cACAmB,KAAA,CAAAC,GAAA;cACA5B,QAAA,CAAAqB,KAAA;cACA,KAAAF,IAAA;YACA,WAAAO,IAAA;cACA;cACAI,OAAA,CAAAD,KAAA,UAAAD,GAAA;cACAD,KAAA,CAAAC,GAAA;YACA;cACA;cACAE,OAAA,CAAAD,KAAA,YAAAH,IAAA,EAAAE,GAAA;YACA;UACA,GACAgB,KAAA,CAAAf,KAAA;YACA;YACA,IAAAA,KAAA,CAAAL,QAAA;cACA;cACAM,OAAA,CAAAD,KAAA,aAAAA,KAAA,CAAAL,QAAA,CAAArB,IAAA;cACA2B,OAAA,CAAAD,KAAA,SAAAA,KAAA,CAAAL,QAAA,CAAAqB,MAAA;YACA,WAAAhB,KAAA,CAAA3B,OAAA;cACA;cACA4B,OAAA,CAAAD,KAAA,UAAAA,KAAA,CAAA3B,OAAA;YACA;cACA;cACA4B,OAAA,CAAAD,KAAA,UAAAA,KAAA,CAAAD,GAAA;YACA;UACA;QACA;UACAE,OAAA,CAAAW,GAAA;UACA;QACA;MACA;IACA;IACAvB,UAAAc,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAc,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}